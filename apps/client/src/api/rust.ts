/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function getConfig() {
    return invoke()<Config>("get_config")
}

export function setGameDirectory(gameDirectory: string) {
    return invoke()<null>("set_game_directory", { gameDirectory })
}

export function detectGameDirectories() {
    return invoke()<string[]>("detect_game_directories")
}

export function getInstallState(modId: number) {
    return invoke()<[string, CachedMod | null, LocalInstallConfig[] | null]>("get_install_state", { modId })
}

export function installMod(modData: CachedMod, installConfig: LocalInstallConfig, downloadUrl: string) {
    return invoke()<null>("install_mod", { modData,installConfig,downloadUrl })
}

export function uninstallMod(installConfig: LocalInstallConfig) {
    return invoke()<null>("uninstall_mod", { installConfig })
}

export type CachedMod = { id: number; name: string; mod_version: string; game_version: string }
export type LocalInstallConfig = { id: number; mod_id: number; name: string; mods_path: string | null; res_path: string | null; configs_path: string | null; game_directory: string }
export type Config = { game_directory: string | null }
